name: Build iStoreOS Scratch Docker Image and Push to Docker Hub

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/istoreos.yml' # 更新文件路径
  workflow_dispatch:     # 保留手动触发选项作为备用

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gzip qemu-utils kpartx unsquashfs binwalk

      - name: Download iStoreOS image
        run: |
<<<<<<< HEAD:.github/workflows/istoreos.yml
          wget https://fw0.koolcenter.com/iStoreOS/x86_64_efi/istoreos-24.10.1-2025060614-x86-64-squashfs-combined-efi.img.gz
=======
          wget https://fw0.koolcenter.com/iStoreOS/x86_64_efi/istoreos-24.10.1-2025062011-x86-64-squashfs-combined-efi.img.gz
>>>>>>> 06fcae27f546fbf9bd7f75c2fa6287f029ad1740:istoreos.yml

      # 从URL中提取日期部分
      - name: Extract date from URL
        id: extract_date
        run: |
<<<<<<< HEAD:.github/workflows/istoreos.yml
          # 从URL中提取日期部分（2025060614）
          URL="https://fw0.koolcenter.com/iStoreOS/x86_64_efi/istoreos-24.10.1-2025060614-x86-64-squashfs-combined-efi.img.gz"
=======
          # 从URL中提取日期部分（2025062011）
          URL="https://fw0.koolcenter.com/iStoreOS/x86_64_efi/istoreos-24.10.1-2025062011-x86-64-squashfs-combined-efi.img.gz"
>>>>>>> 06fcae27f546fbf9bd7f75c2fa6287f029ad1740:istoreos.yml
          DATE=$(echo "$URL" | grep -oE '[0-9]{10}')
          echo "Extracted date: $DATE"
          echo "date=$DATE" >> $GITHUB_OUTPUT

      - name: Decompress the image
        run: |
<<<<<<< HEAD:.github/workflows/istoreos.yml
          gzip -d istoreos-24.10.1-2025060614-x86-64-squashfs-combined-efi.img.gz

      - name: Rename image file
        run: |
          mv istoreos-24.10.1-2025060614-x86-64-squashfs-combined-efi.img istoreos.img
=======
          gzip -d istoreos-24.10.1-2025062011-x86-64-squashfs-combined-efi.img.gz

      - name: Rename image file
        run: |
          mv istoreos-24.10.1-2025062011-x86-64-squashfs-combined-efi.img istoreos.img
>>>>>>> 06fcae27f546fbf9bd7f75c2fa6287f029ad1740:istoreos.yml

      - name: Analyze image with binwalk and extract squashfs
        run: |
          binwalk istoreos.img > binwalk_output.txt

          # 提取 squashfs 的偏移和大小（根据实际输出调整）
          OFFSET=$(grep "Squashfs filesystem" binwalk_output.txt | head -n 1 | awk '{print $1}')
          SIZE=$(grep "Squashfs filesystem" binwalk_output.txt | head -n 1 | awk '{print $4}')

          echo "Extracting squashfs from offset $OFFSET with size $SIZE"
          dd if=istoreos.img of=rootfs.squashfs bs=1 skip=$OFFSET count=$SIZE

          ls -lh rootfs.squashfs

      - name: Unpack squashfs to directory
        run: |
          mkdir squashfs-root
          unsquashfs -f -d squashfs-root rootfs.squashfs

      - name: Pack extracted rootfs into tar.gz (rename to istoreos.tar.gz)
        run: |
          tar -czvf istoreos.tar.gz -C squashfs-root .

      - name: Build Docker image from scratch
        run: |
          # 创建 Dockerfile
          cat <<EOF > Dockerfile
          FROM scratch
          ADD istoreos.tar.gz /
          CMD ["/sbin/init"]
          EOF

          # 构建镜像
          docker build -t istoreos:latest .

      # 登录到 Docker Hub
      - name: 登录到 Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag Docker image with date and latest
        run: |
          # 使用步骤中提取的日期作为标签
          DATE=${{ steps.extract_date.outputs.date }}
          echo "Tagging image with date: $DATE"
          
          # 打上日期标签和latest标签
          docker tag istoreos:latest $DOCKER_HUB_USERNAME/istoreos:$DATE
          docker tag istoreos:latest $DOCKER_HUB_USERNAME/istoreos:latest

      - name: Push Docker image to Docker Hub
        run: |
          # 推送两个标签的镜像
          DATE=${{ steps.extract_date.outputs.date }}
          echo "Pushing image with date tag: $DATE"
          docker push $DOCKER_HUB_USERNAME/istoreos:$DATE
          
          # echo "Pushing image with latest tag"
          # docker push $DOCKER_HUB_USERNAME/istoreos:latest
