name: Check iStoreOS Update

on:
  schedule:
    - cron: '0 0 * * *'  # 每天运行一次
  workflow_dispatch:      # 允许手动触发
  push:
    branches:
      - main            # 只在 main 分支上运行

jobs:
  check-update:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # 授予写入权限
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main    # 确保检出 main 分支

      - name: Check for updates
        id: check
        run: |
          chmod +x ./update_istoreos_image.sh
          ./update_istoreos_image.sh

      - name: Update README if needed
        if: steps.check.outputs.updated == 'true'
        run: |
          # 创建或更新 README.md 文件
          cat > README.md << 'EOF'
          # iStoreOS Docker

          这个项目提供了一个自动化工具，用于检查和更新 iStoreOS 的最新版本。

          ## 最新版本

          最新的 iStoreOS 镜像 URL: ${{ steps.check.outputs.url }}
          更新日期: ${{ steps.check.outputs.date }}

          ## 功能

          - 自动检查 iStoreOS 的最新版本
          - 当检测到新版本时，自动更新版本信息
          - 支持通过 GitHub Actions 自动运行或手动触发

          ## 文件说明

          - `update_istoreos_image.sh`: 检查 iStoreOS 最新版本的脚本
          - `.github/workflows/check_update.yml`: GitHub Actions 工作流配置

          ## 使用方法

          ### 自动检查更新

          工作流程已配置为每天自动运行。无需手动干预，系统会自动检查更新并更新版本信息。

          ### 手动触发检查

          1. 在 GitHub 仓库页面，点击 "Actions" 标签
          2. 选择 "Check iStoreOS Update" 工作流
          3. 点击 "Run workflow" 按钮
          4. 选择 "main" 分支
          5. 点击 "Run workflow" 按钮确认

          ### 本地运行脚本

          如果需要在本地运行脚本，可以使用以下命令：

          ```bash
          chmod +x update_istoreos_image.sh
          ./update_istoreos_image.sh
          ```

          ## 注意事项

          - 工作流仅在 main 分支上运行
          - 脚本依赖于 iStoreOS 官方网站的 URL 结构，如果官方网站更改了 URL 结构，可能需要更新脚本
          EOF

      - name: Commit and push if changed  # 提交更改
        if: steps.check.outputs.updated == 'true'
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add README.md
          git commit -m "Update iStoreOS image URL to ${{ steps.check.outputs.date }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # GitHub Token 用于推送更改
